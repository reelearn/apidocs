openapi: 3.0.1
info:
  title: Reelearn Server
  description: APIs used by the reelearn.ai backend server
  version: 1.0.0
servers:
- url: /api/v1
security:
- bearerAuth: []
paths:
  /healthcheck:
    get:
      x-eov-operation-id: main
      x-eov-operation-handler: serverHealthcheck/elbHealthcheck/index
      security: [] # Override global security headers!
      description: Basic healthcheck
      responses:
        200:
          description: Successful healthcheck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /action:
    post:
      x-eov-operation-id: main
      x-eov-operation-handler: serverHealthcheck/elbHealthcheck/index
      description: Triggers an event for a media content, eg. a Like/Dislike event.
      requestBody:
        description: Trigger an action event (WIP)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newActionRequest'
        required: true
      responses:
        200:
          description: action event post response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /topic/{topicId}:
    get:
      x-eov-operation-id: main
      x-eov-operation-handler: reelearnMedia/fetchTopics/index
      security: [] # Override global security headers!
      description: Fetches a list of videos for the current topic context
      parameters:
          - in: path
            name: topicId
            schema:
              type: number
            required: true
            description: Unique ID of the list of media (topic) being requested
          - in: query
            name: lang
            schema:
              type: string
              enum: ['en', 'english', 'hi', 'hindi', 'Hindi']
            required: false
            description: Language of the media being requested
          - in: query
            name: page
            schema:
              type: number
            required: false
            description: Currently unused, legacy support
          - in: query
            name: size
            schema:
              type: number
            required: false
            description: Currently unused, legacy support
      responses:
        200:
          description: action event post response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fetchTopicSuccessResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /storeCompanySecretKey:
    post:
      x-eov-operation-id: main
      x-eov-operation-handler: serverHealthcheck/elbHealthcheck/index
      description: Admin API to store an external company's secret
      requestBody:
        description: Save a company's secrets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/storeCompanySecretRequest'
        required: true
      responses:
        200:
          description: Success response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /createUserSession:
    post:
      security: [] # Override global security headers!
      x-eov-operation-id: main
      x-eov-operation-handler: reelearnUsers/createSession/index
      description: Initiate a new session and token creation for a user trying to log in
      requestBody:
        description: Verify user's company information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserSessionRequest'
        required: true
      responses:
        200:
          description: Success response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /contentFeedback:
    post:
      x-eov-operation-id: main
      x-eov-operation-handler: serverHealthcheck/elbHealthcheck/index
      description: Submits a written feedback for the current media being viewed
      requestBody:
        description: Trigger a submit feedback event (WIP)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contentFeedbackRequest'
        required: true
      responses:
        200:
          description: action event post response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /videos:
    get:
      x-eov-operation-id: main
      x-eov-operation-handler: reelearnMedia/fetchVideos/index
      security: [] # Override global security headers!
      description: Fetches a list of videos for the current user context
      parameters:
        - in: query
          name: page
          schema:
            type: number
          description: Used for pagination of our media on the client switched
        - in: query
          name: size
          schema:
            type: number
          description: Number of videos requested by the client
        - in: query
          name: slotId
          schema:
            type: number
          description: Videos to fetch for a particular slot
      responses:
        200:
          description: Fetch videos success response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/videosSuccessResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
  /testing:
    post:
      x-eov-operation-id: main
      x-eov-operation-handler: serverHealthcheck/elbHealthcheck/index
      # security: [] # Override global security headers!
      description: testing
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: Testing
        - in: query
          name: size
          schema:
            type: number
          description: Testing
      requestBody:
        description: testing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newActionRequest'
        required: true
      responses:
        200:
          description: testing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponse'
        default:
          description: Error response (WIP)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-codegen-request-body-name: action
components:
  schemas:

    newActionRequest:
      required:
      - contentId
      - userId
      type: object
      properties:
        contentId:
          type: number
          description: Unique ID of the media currently being viewed
          example: 12345
        userId:
          type: number
          description: Unique ID of the user triggering this event
          example: 12345
        liked:
          type: boolean
          description: True if the event was a like action, false if it the user removed
            her like
          example: true
          default: false
        disliked:
          type: boolean
          description: True if the event was a dislike action, false if the user removed
            her dislike
          example: false
          default: false
      additionalProperties: false

    contentFeedbackRequest:
      required:
      - action
      - contentId
      - text
      - userId
      type: object
      properties:
        contentId:
          type: number
          description: Unique ID of the media currently being viewed
          example: 12345
        userId:
          type: number
          description: Unique ID of the user triggering this event
          example: 12345
        action:
          type: string
          description: Enum for the type of feedback (report something, or send an
            actual feedback)
          example: Feedback
          enum:
          - Report
          - Feedback
        text:
          type: string
          description: Feedback text when the type of action if 'Feedback'
          example: Nice Video
          default: ""

    fetchVideosRequest:
      required:
      - userId
      - companyId
      - slotId
      type: object
      properties:
        userId:
          type: number
          description: Unique ID of the user triggering this event
          example: 12345
        companyId:
          type: number
          description: Unique ID of the company triggering this event
          example: 12345
        slotId:
          type: number
          description: Unique ID of the media list currently being viewed
          example: 12345
        page:
          type: string
          description: An alpha-numeric string encoding the information regarding videos watched in the current session
          example: abcd1234xyz
          default: null
        size:
          type: number
          description: Number of videos to fetch in the next request
          example: 12345
          
    storeCompanySecretRequest:
      required:
      - companyId
      - companySecretKey
      - companySecretToken
      type: object
      properties:
        companyId:
          type: number
          description: Unique ID of the external company
          example: abcd
        companySecretKey:
          type: string
          description: Unique key of the external company
          example: abcd
        companySecretToken:
          type: string
          description: Unique key of the external company generated
          example: abcd
      additionalProperties: false

    createUserSessionRequest:
      required:
      - externalUserId
      - companyId
      - companySecretKey
      - companySecretToken
      type: object
      properties:
        externalUserId:
          type: string
          description: Unique external ID of a user
          example: abcd
        companyId:
          type: number
          description: Unique ID of the external company
          example: abcd
        companySecretKey:
          type: string
          description: Unique key of the external company
          example: abcd
        companySecretToken:
          type: string
          description: Unique key of the external company generated
          example: abcd
      additionalProperties: false

    errorResponse:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: success
    successResponse:
      required:
      - code
      - result
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        result:
          type: object
          example: {"response": "hello world"}

    videosSuccessResponse:
      required:
      - playlist

      type: object
      properties:
        playlist:
          type: array
          minItems: 0
          items:
            type: array
            minItems: 0
            items:
              type: object
              required:
                - content_id
                - media_type
              properties:
                content_id: 
                  type: number
                media_type:
                  type: string
                  enum: ['video']
                source: 
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      src: 
                        type: string
                        example: 'http://content.reelearn.ai/videos/Whatsapp%20Videos/19/19%20(Hindi%20Video)%20480p.mp4'
                      mime_type:
                        type: string
                        example: video/mp4
                      srclang:
                        type: string
                        enum: ['en', 'english', 'hi', 'hindi']
                      default:
                        type: boolean
                textTracks:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      kind:
                        type: string
                        example: 'subtitles'
                      label:
                        type: string
                        example: 'English'
                      srclang:
                        type: string
                        enum: ['en', 'english', 'hi', 'hindi']
                      src: 
                        type: string
                        example: 'http://content.reelearn.ai/videos/Whatsapp%20Videos/vtt/19%20(English%20Subtitle).vtt'
                      default:
                        type: boolean
                poster:
                  type: string
                  example: 'http://content.reelearn.ai/videos/firstframe/19_Hindi_Video_zhnulq.jpg'
                likes:
                  type: number
                  example: 34
                comments:     
                  type: number
                  example: 69
                liked: 
                  type: boolean
                disliked:
                  type: boolean
                  nullable: true
                icon_url:
                  type: string
                description:
                  type: string
                title:
                  type: string

    fetchTopicSuccessResponse:
      type: object

  securitySchemes:
    bearerAuth:
      type: apiKey
      description: JWT Authorization header
      name: Authorization
      in: header
